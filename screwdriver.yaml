version: 4
  
shared:
    image: node:12

cache:
  job:
    component-bf1:
      - $SD_SOURCE_DIR/1g.bin

jobs:
  pull-request:
    requires: [~pr]
    steps:
      - build: echo "skip build"
  invalid-image-bf1:
    annotations: 
      screwdriver.cd/buildCluster: bf1
    image: invalid_node_image
    steps:
      - build: echo "build"
  component-default-working:
    annotations: 
      screwdriver.cd/cpu: 16
      screwdriver.cd/ram: 20
    steps:
      - build: echo "build"
      - sl: sleep 10m
  component-gq1:
    annotations: 
      screwdriver.cd/buildCluster: gq1
      screwdriver.cd/cpu: 16
      screwdriver.cd/ram: 20      
    steps:
      - build: echo "build"
      - exp: export
      - sl: sleep 10m
  component-bf1:
    image: centos:centos7
    annotations: 
      screwdriver.cd/buildCluster: bf1
    steps:
      - build: echo "build"   
      - dd: dd if=/dev/zero of=1g.bin bs=1G count=1 || true
      - dd1: dd if=/dev/urandom of=tmpfile bs=10240 count=100000
      - ex: export
  trigger-beta:
      image: centos:centos7
      environment:
          PIPELINE_ID: 8187
          INSTANCE: "https://beta.api.screwdriver.cd"
          NAMESPACE: v4
          TIMEOUT: 10
      steps:
        - install_jq: yum install epel-release -y && yum update -y && yum install jq -y && jq -Version
        - trigger_beta_functiona_test: |
            set -e
            echo "${INSTANCE}/${NAMESPACE}/auth/token?api_token=${ACCESS_TOKEN}"
            TOKEN=$(curl -m ${TIMEOUT} --fail ${INSTANCE}/${NAMESPACE}/auth/token?api_token=${ACCESS_TOKEN} | jq -r '.token')
            JOB_ID=$(curl -m ${TIMEOUT} --fail -H 'Accept: application/json' -H "Authorization: Bearer ${TOKEN}" ${INSTANCE}/${NAMESPACE}/pipelines/${PIPELINE_ID}/jobs | jq -r '.[0].id')
            BUILD_ID=$(curl -m ${TIMEOUT} --fail -d "jobId=${JOB}" -H "Content-Type: application/x-www-form-urlencoded" -H "Authorization: Bearer ${TOKEN}" -X POST ${INSTANCE}/${NAMESPACE}/builds | jq -r '.id')
            for attempts in {1..10}; do
              echo "Build ${BUILD_ID} started, polling for status ${STATUS} \n"
              STATUS=$(curl -m ${TIMEOUT} --fail -H "Authorization: Bearer ${TOKEN}" ${INSTANCE}/${NAMESPACE}/builds/${BUILD_ID} | jq -r '.status')
              if [[ "${STATUS}" -eq "SUCCESS" ]]; then 
                break
              fi

              if [[ "${STATUS}" -eq "FAILURE" || "${STATUS}" -eq "ABORTED" ]]; then
                exit 1
              fi

              if [[ "${STATUS}" -eq "RUNNING" || "${STATUS}" -eq "QUEUED" ]]; then
                sleep 30s
              fi
            done
      secrets:
        - ACCESS_TOKEN
